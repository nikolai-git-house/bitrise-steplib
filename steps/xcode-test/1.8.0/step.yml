title: Xcode Test
summary: |-
  Write the tests and run them on every build just to make sure those tiny
  code goblins didn't put something in the code that shouldn't be there while
  you were at the daily Scrum meeting.
description: Runs Xcode's `test` action.
website: https://github.com/bitrise-io/steps-xcode-test
source_code_url: https://github.com/bitrise-io/steps-xcode-test
support_url: https://github.com/bitrise-io/steps-xcode-test/issues
published_at: 2015-12-05T18:07:45.757847673+01:00
source:
  git: https://github.com/bitrise-io/steps-xcode-test.git
  commit: 02a457a5a5cf6f44b1d4b0048c680a6f80691539
host_os_tags:
- osx-10.10
project_type_tags:
- ios
type_tags:
- build
- xcode
dependencies:
- manager: _
  name: xcode
- manager: brew
  name: go
deps:
  brew:
  - name: go
  check_only:
  - name: xcode
is_requires_admin_user: false
is_always_run: false
is_skippable: false
inputs:
- opts:
    description: |
      Working directory of the step.
      You can leave it empty to don't change it.
    is_expand: true
    is_required: false
    title: Working directory
  workdir: $BITRISE_SOURCE_DIR
- opts:
    description: |
      A `.xcodeproj` or `.xcworkspace` path, relative to
      the Workfing directory (if specified).
    is_expand: true
    is_required: true
    title: Project (or Workspace) path
  project_path: $BITRISE_PROJECT_PATH
- opts:
    description: |
      The Scheme to use.

      **IMPORTANT**: The Scheme have to be marked as __shared__ in Xcode!
    is_expand: true
    is_required: true
    title: Scheme name
  scheme: $BITRISE_SCHEME
- opts:
    description: |
      Set it as it is shown in
      Xcode's device selection dropdown UI.

      A couple of examples (the
      actual available options depend on which versions
      are installed):

      * iPhone 6
      * iPhone 6 Plus
      * iPad
      * iPad Air
    is_expand: true
    is_required: false
    title: Device
  simulator_device: iPhone 6
- opts:
    description: |
      Set it as it is shown in
      Xcode's device selection dropdown UI.

      A couple of format examples (the
      actual available options depend on which versions
      are installed):

      * 8.4
      * latest
    is_expand: true
    is_required: false
    title: OS version
  simulator_os_version: latest
- is_clean_build: "yes"
  opts:
    is_expand: true
    is_required: true
    title: Do a clean Xcode build before testing?
    value_options:
    - "yes"
    - "no"
- generate_code_coverage_files: "no"
  opts:
    is_expand: true
    is_required: true
    title: Generate code coverage files?
    value_options:
    - "yes"
    - "no"
- opts:
    description: |-
      **This option is only available if you set `xcpretty` as the `output_tool`.**

      Test results in HTML format, generated by `xcpretty`,
      will be saved to this file.
    is_expand: true
    is_required: true
    title: Test results file path
  test_results_file_path: ${BITRISE_DEPLOY_DIR}/xcode-test-results-${BITRISE_SCHEME}.html
- opts:
    description: |-
      If output_tool is set to xcpretty, the xcodebuild output will be prettified by xcpretty.
      If output_tool is set to xcodebuild, the raw xcodebuild output will be printed.
    is_dont_change_value: false
    is_expand: false
    is_required: true
    title: Output tool
    value_options:
    - xcpretty
    - xcodebuild
  output_tool: xcpretty
outputs:
- BITRISE_XCODE_TEST_RESULT: null
  opts:
    title: Result of the tests. 'succeeded' or 'failed'.
    value_options:
    - succeeded
    - failed
