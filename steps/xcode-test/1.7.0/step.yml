title: Xcode Test
summary: |-
  Write the tests and run them on every build just to make sure those tiny
  code goblins didn't put something in the code that shouldn't be there while
  you were at the daily Scrum meeting.
description: Runs Xcode's `test` action.
website: https://github.com/bitrise-io/steps-xcode-test
source_code_url: https://github.com/bitrise-io/steps-xcode-test
support_url: https://github.com/bitrise-io/steps-xcode-test/issues
published_at: 2015-11-09T13:01:07.403459882+01:00
source:
  git: https://github.com/bitrise-io/steps-xcode-test.git
  commit: 5853f3d7ffe7c329ee63aac61dd367540aa985f7
host_os_tags:
- osx-10.10
project_type_tags:
- ios
type_tags:
- build
- xcode
dependencies:
- manager: _
  name: xcode
- manager: brew
  name: go
deps:
  brew:
  - name: go
  check_only:
  - name: xcode
is_requires_admin_user: false
is_always_run: false
is_skippable: false
inputs:
- opts:
    description: |
      Working directory of the step.
      You can leave it empty to don't change it.
    is_expand: true
    is_required: false
    title: Working directory
  workdir: $BITRISE_SOURCE_DIR
- opts:
    description: |
      A `.xcodeproj` or `.xcworkspace` path, relative to
      the Workfing directory (if specified).
    is_expand: true
    is_required: true
    title: Project (or Workspace) path
  project_path: $BITRISE_PROJECT_PATH
- opts:
    description: |
      The Scheme to use.

      **IMPORTANT**: The Scheme have to be marked as __shared__ in Xcode!
    is_expand: true
    is_required: true
    title: Scheme name
  scheme: $BITRISE_SCHEME
- opts:
    description: |
      Set it as it is shown in
      Xcode's device selection dropdown UI.

      A couple of examples (the
      actual available options depend on which versions
      are installed):

      * iPhone 6
      * iPhone 6 Plus
      * iPad
      * iPad Air
    is_expand: true
    is_required: false
    title: Device
  simulator_device: iPhone 6
- opts:
    description: |
      Set it as it is shown in
      Xcode's device selection dropdown UI.

      A couple of format examples (the
      actual available options depend on which versions
      are installed):

      * 8.4
      * latest
    is_expand: true
    is_required: false
    title: OS version
  simulator_os_version: latest
- is_clean_build: "yes"
  opts:
    is_expand: true
    is_required: true
    title: Do a clean Xcode build before testing?
    value_options:
    - "yes"
    - "no"
- generate_code_coverage_files: "no"
  opts:
    is_expand: true
    is_required: true
    title: Generate code coverage files?
    value_options:
    - "yes"
    - "no"
- is_full_output: "no"
  opts:
    description: |-
      If this option is set to "no" then only the test results / test summary
      will be printed. If set to "yes" then every output generated
      by `xcodebuild` (compile & test) will be presented.
    is_expand: true
    is_required: true
    title: Present the full compile & test output?
    value_options:
    - "yes"
    - "no"
- opts:
    description: |-
      When available this output will contain the full test results
      printed by Xcode.

      Something like:

          Failing tests:
            -[BitriseSampleWithYMLTests testFailExample()]
          ** TEST FAILED **

          Test Suite 'All tests' started at 2015-09-20 10:18:46.342
          Test Suite 'BitriseSampleWithYMLTests.xctest' started at 2015-09-20 10:18:46.343
          Test Suite 'BitriseSampleWithYMLTests' started at 2015-09-20 10:18:46.343
          Test Case '-[BitriseSampleWithYMLTests.BitriseSampleWithYMLTests testExample]' started.
          Test Case '-[BitriseSampleWithYMLTests.BitriseSampleWithYMLTests testExample]' passed (0.000 seconds).
          Test Case '-[BitriseSampleWithYMLTests.BitriseSampleWithYMLTests testFailExample]' started.
          /Users/viktorbenei/develop/sample-apps-ios-with-bitrise-yml/BitriseSampleWithYMLTests/BitriseSampleWithYMLTests.swift:33: error: -[BitriseSampleWithYMLTests.BitriseSampleWithYMLTests testFailExample] : XCTAssertTrue failed -
          Test Case '-[BitriseSampleWithYMLTests.BitriseSampleWithYMLTests testFailExample]' failed (0.001 seconds).
    is_expand: true
    is_required: true
    title: Full results / summary of the test, as printed by Xcode, will be saved
      into this file
  test_results_file_path: ${BITRISE_DEPLOY_DIR}/xcode-test-summary-${BITRISE_SCHEME}.log
outputs:
- BITRISE_XCODE_TEST_RESULT: null
  opts:
    title: Result of the tests. 'succeeded' or 'failed'.
    value_options:
    - succeeded
    - failed
